# -*- coding: utf-8 -*-
"""amesHousingCleaned.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11f9-g-47dJKGhq2fmuLUgwraS_lCgOSe
"""

import pandas as pd
import numpy as np

df = pd.read_csv('/content/drive/MyDrive/Datasets/Ames Housing Level 2/AmesHousing.csv')
df.head()

# shape of data
df.shape

# info about dataset
df.info()

# sum of na values
df.isna().sum()

"""### Filling NaN values"""

# filling na values with 'None'
noneCols = ['Pool QC','Fence','Misc Feature','Alley',
             'Garage Type','Garage Finish','Garage Qual','Garage Cond',
             'Bsmt Qual','Bsmt Cond','Bsmt Exposure','BsmtFin Type 1','BsmtFin Type 2',
             'Fireplace Qu']

for noneCol in noneCols:
    df[noneCol] = df[noneCol].replace(np.nan, 'None')

"""### Numerical Columns"""

# handling numerical columns with 'median' value
numCols = df.select_dtypes(include=['float64', 'int64']).columns

for numCol in numCols:
    df[numCol] = df[numCol].fillna(df[numCol].median())

# handling LotFrontage by neighborhood median
df['Lot Frontage'] = df.groupby('Neighborhood')['Lot Frontage'].transform(lambda x: x.fillna(x.median()))

# Electrical â†’ Fill missing with mode (most frequent value).
df.Electrical = df.Electrical.fillna(df.Electrical.mode()[0])

# checking if all numerical columns have no missing values
df[numCols].isna().sum()

"""### Categorical Columns"""

# changing dtype to 'category'
catCols = df.select_dtypes(include='object', exclude=['int64', 'float64'])

for col in catCols:
    df[col] = df[col].astype('category')

"""### Handling Numeric Outliers"""

# checking Gr Liv Area for extreme values
indicesToDrop = df[df['Gr Liv Area'] > 4000].index
df = df.drop(index=indicesToDrop)

"""### Encoding Ordinal Features"""

# mapping values for some columns
ordinalMaps = {'Ex': 5, 'Gd': 4, 'TA': 3, 'Fa': 2, 'Po': 1}
ordinalCols = ['Exter Qual','Exter Cond','Bsmt Qual','Bsmt Cond','Kitchen Qual','Fireplace Qu','Garage Qual','Garage Cond']

for ordCol in ordinalCols:
    df[ordCol] = df[ordCol].astype(object)
    df[ordCol] = df[ordCol].map(ordinalMaps)
    # filling other values that don't get replaced
    df[ordCol] = df[ordCol].fillna(0)
    # converting to int
    df[ordCol] = df[ordCol].astype(int)

"""### Results"""

# final results
df.isnull().sum()

"""### Saving the cleaned dataset"""

# saving
df.to_csv('/content/drive/MyDrive/Datasets/Ames Housing Level 2/amesHousingCleaned.csv', index=False)