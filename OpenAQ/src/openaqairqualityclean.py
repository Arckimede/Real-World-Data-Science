# -*- coding: utf-8 -*-
"""openAQAirQualityClean.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1T2gzFCOm_HKT_fT4vD8SM9MO2n3q0No9
"""

import numpy as np
import pandas as pd

df = pd.read_csv('/content/drive/MyDrive/Datasets/Level 2 OpenAQ Air Quality/openaq.csv', delimiter=";")
df.head()

# size
df.size

# shape
df.shape

# data types
df.dtypes

# null values
df.isna().sum()

# Standardize column names
df.columns = df.columns.str.strip().str.lower()

# Strip extra whitespace from string cells
df = df.apply(lambda x: x.strip() if isinstance(x, str) else x)

# Parse coordinates into latitude / longitude
def convertCoordinates(val: str):
  if isinstance(val, str):
    coords = val.split(",")
    try:
      return float(coords[0]), float(coords[1])
    except:
      return np.nan, np.nan
  return np.nan, np.nan

df[['latitude', 'longitude']] = df.coordinates.apply(lambda x: pd.Series(convertCoordinates(x)))

# dropping coordinates column
df.drop(columns='coordinates', inplace=True)

# Fix Value column
df.value = df.value.astype(float)
df.value = df.value.round(2)

# treat -9999 as missing
df[df.value == -9999] = np.nan

# Parse datetime
df['last updated'] = pd.to_datetime(df['last updated'], errors='coerce')

# Extract date parts
df['year'] = df['last updated'].dt.year
df['month'] = df['last updated'].dt.month
df['day'] = df['last updated'].dt.day
df['hour'] = df['last updated'].dt.hour

# Use pandas nullable integer type (handles NaN safely)
df[['year', 'month', 'day', 'hour']] = (df[['year', 'month', 'day', 'hour']]).astype('Int64')

# Unit flags
df['unit ppm'] = df['unit'].str.lower().str.contains('ppm', na=False)
df['unit ugm3'] = df['unit'].str.lower().str.contains('Âµg', na=False) | df['unit'].str.lower().str.contains('ug', na=False)

# Clean pollutant names
df.pollutant = df.pollutant.str.upper()

# Validate coordinates
df[df.longitude > 180] = np.nan
df[df.latitude > 90] = np.nan

# Drop duplicates
df = df.drop_duplicates()

# Summary
print("After cleaning:", df.shape)
print(df.isna().sum())

# Drop rows with critical missing values
df = df.dropna(subset=['value', 'pollutant', 'latitude', 'longitude', 'last updated'])

# Cities and Country Labels can be missing
df['city'] = df['city'].fillna('Unknown')
df['country label'] = df['country label'].fillna('Unknown')

# After Cleaning
print(df.shape)
print(df.isna().sum())

# Saving the file
df.to_csv('/content/drive/MyDrive/Datasets/Level 2 OpenAQ Air Quality/openAQCleaned.csv', index=False)